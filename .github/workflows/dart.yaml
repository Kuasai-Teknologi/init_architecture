# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git /opt/flutter
          echo "/opt/flutter/bin" >> $GITHUB_PATH

      - name: Run flutter doctor
        run: flutter doctor

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603


      - name: Verify Flutter
        run: which flutter


      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      - name: Install lcov
        run: sudo apt-get install lcov

      # - name: Grant execute permission to coverage.sh
      #   run: chmod +x tool/coverage.sh

      - name: Run coverage script
        run: sh tool/coverage.sh

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      # - name: Run tests
      #   run: dart test --coverage --test-randomize-ordering-seed

      - name: Verify coverage file before upload
        run: |
          if [ -f coverage/lcov.info ]; then
            echo "Coverage report found!"
          else
            echo "Coverage report not found!"
          fi

      # Upload coverage to Codecov after finish unit test opration
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: anwar907/init_architecture
          files: coverage/lcov.info
          fail_ci_if_error: true 

      # Publish to pub.dev
      # Note that this step may take a while to complete.
      - name: Publish pub.dev
        run: dart pub publish -n